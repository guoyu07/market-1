<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

    <mvc:annotation-driven/>
    <context:component-scan base-package="com.appmarket" />
    <context:component-scan base-package="com.kingson" />
    <!-- 视图解析器ViewResolver -->
    <!-- 解析jsp，默认支持jstl -->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="1" />
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
           <!-- 在SpringMVC中，可以使用@RequestBody和@ResponseBody两个注解，分别完成请求报文到对象和对象到响应报文的转换
            底层这种灵活的消息转换机制，就是Spring3.x中新引入的HttpMessageConverter即消息转换器机制，进行消息读写。-->
            <!--一次请求报文和一次响应报文，分别被抽象为一个请求消息HttpInputMessage和一个响应消息HttpOutputMessage-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>

            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=utf-8</value>
                        <value>application/x-www-form-urlencoded;charset=UTF-8</value>
                        <value>text/plain;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                        <value>text/json;charset=utf-8</value>
                    </list>
                </property>
                <property name="objectMapper">
                    <bean class="com.appmarket.market.utils.ObjectMapper2Customer">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>

        <mvc:argument-resolvers>
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
        </mvc:argument-resolvers>

    </mvc:annotation-driven>

    <!--如果当前路径是/ 则交给相应的视图解析器直接解析为视图-->
    <mvc:view-controller path="/" view-name="index"/>

    <!-- 配置静态资源 -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!--这种方式要指定/WEB-INF目录，WEB-INF是Java的WEB应用的安全目录。
    所谓安全就是客户端无法访问，只有服务端可以访问的目录。-->
    <!--<mvc:resources mapping="/assets/**" location="/WEB-INF/assets/" />-->

    <!-- 使用@AspectJ风格使用如下方式，来指定使用CGLIB代理，激活自动代理功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 启用shrio授权注解拦截方式 -->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <!-- 处理文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxUploadSize" value="209715200" /><!-- 上传文件大小限制为200M，200*1024*1024 -->
        <property name="maxInMemorySize" value="4096" />
    </bean>

    <!--  缓存属性-->
   <!-- <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation"  value="classpath:ehcache.xml"/>
    </bean>-->

    <!-- 默认是cacheManager -->
   <!-- <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager"  ref="cacheManagerFactory"/>
    </bean>-->


</beans>